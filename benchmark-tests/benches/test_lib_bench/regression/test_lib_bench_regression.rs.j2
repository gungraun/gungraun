use std::hint::black_box;

use benchmark_tests::{bubble_sort, setup_worst_case_array};
use iai_callgrind::{
    library_benchmark, library_benchmark_group, main, EventKind, LibraryBenchmarkConfig,
    Callgrind, ValgrindTool, Cachegrind, CachegrindMetric, Dhat, DhatMetric
};

#[library_benchmark]
#[bench::regress_callgrind(
    args = [{{ callgrind_array_length }}],
    setup = setup_worst_case_array,
    config = LibraryBenchmarkConfig::default()
        .tool(Callgrind::default()
            .limits([(EventKind::Ir, 0.0)]).fail_fast({{ callgrind_fail_fast }})
        )
)]
#[bench::regress_cachegrind(
    args = [{{ cachegrind_array_length }}],
    setup = setup_worst_case_array,
    config = LibraryBenchmarkConfig::default()
        .default_tool(ValgrindTool::Cachegrind)
        .tool(Cachegrind::default()
            .limits([(CachegrindMetric::Ir, 0.0)]).fail_fast({{ cachegrind_fail_fast }})
        )
)]
#[bench::regress_dhat(
    args = [{{ dhat_array_length }}],
    setup = setup_worst_case_array,
    config = LibraryBenchmarkConfig::default()
        .default_tool(ValgrindTool::DHAT)
        .tool(Dhat::default()
            .soft_limits([(DhatMetric::TotalBytes, 0.0)]).fail_fast({{ dhat_fail_fast }})
        )
)]
#[bench::should_not_run_after_regression(setup_worst_case_array(10))]
fn bench_bubble_sort_soft_limits(array: Vec<i32>) -> Vec<i32> {
    black_box(bubble_sort(array))
}

#[library_benchmark]
#[bench::regress_dhat(
    args = [{{ dhat_array_length }}],
    setup = setup_worst_case_array,
    config = LibraryBenchmarkConfig::default()
        .default_tool(ValgrindTool::DHAT)
        .tool(Dhat::default()
            .hard_limits([(DhatMetric::TotalBytes, 16)]).fail_fast({{ dhat_fail_fast }})
        )
)]
#[bench::should_not_run_after_regression(setup_worst_case_array(10))]
fn bench_bubble_sort_hard_limits(array: Vec<i32>) -> Vec<i32> {
    black_box(bubble_sort(array))
}

library_benchmark_group!(
    name = bench_group;
    benchmarks = bench_bubble_sort_soft_limits, bench_bubble_sort_hard_limits
);

main!(library_benchmark_groups = bench_group);
