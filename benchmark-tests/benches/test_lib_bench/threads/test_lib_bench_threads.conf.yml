# TODO: Run these tests on nightly toolchain when rust upstream bug in nightly
# is fixed
groups:
  - runs_on: "!x86_64-unknown-freebsd"
    rust_version: "!=nightly"
    runs:
      - args: ["--nocapture"]
        flaky: 2
        expected:
          files: expected_files.1a.yml
          stdout: expected_stdout.1a
      - args: ["--nocapture"]
        flaky: 2
        expected:
          files: expected_files.1b.yml
          stdout: expected_stdout.1b
      # The third run should produce the exact same files, stdout as the second
      # run
      - args: ["--nocapture"]
        flaky: 2
        expected:
          files: expected_files.1b.yml
          stdout: expected_stdout.1b
      # Test all baseline options and verify the multiple files due to the
      # subprocesses and threads
      - args: ["--nocapture", "--save-baseline"]
        flaky: 2
        expected:
          files: expected_files.1d.yml
          stdout: expected_stdout.1d
      - args: ["--nocapture", "--save-baseline=foo"]
        flaky: 2
        expected:
          files: expected_files.1e.yml
          stdout: expected_stdout.1e
      - args: ["--nocapture", "--load-baseline=foo", "--baseline"]
        flaky: 2
        expected:
          files: expected_files.1e.yml
          stdout: expected_stdout.1f
      - args: ["--nocapture", "--save-baseline=foo"]
        flaky: 2
        expected:
          files: expected_files.1e.yml
          stdout: expected_stdout.1g
  # The tests on freebsd don't verify the stdout since freebsd does not support
  # `--fair-sched=yes` and the differences between two benchmark runs are random
  - runs_on: "x86_64-unknown-freebsd"
    rust_version: "!=nightly"
    runs:
      # The first run does not show any differences because there is no
      # benchmark run to compare to, so the stdout can be verified at least this
      # first time
      - args: ["--nocapture"]
        flaky: 2
        expected:
          files: expected_files.1a.yml
          stdout: expected_stdout.freebsd.1a
      - args: ["--nocapture"]
        flaky: 2
        expected:
          files: expected_files.1b.yml
      # The third run should produce the exact same files, stdout as the second
      # run
      - args: ["--nocapture"]
        flaky: 2
        expected:
          files: expected_files.1b.yml
      # Test all baseline options and verify the creation of multiple files due
      # to the subprocesses and threads
      - args: ["--nocapture", "--save-baseline"]
        flaky: 2
        expected:
          files: expected_files.1d.yml
      - args: ["--nocapture", "--save-baseline=foo"]
        flaky: 2
        expected:
          files: expected_files.1e.yml
      - args: ["--nocapture", "--load-baseline=foo", "--baseline"]
        flaky: 2
        expected:
          files: expected_files.1e.yml
      - args: ["--nocapture", "--save-baseline=foo"]
        flaky: 2
        expected:
          files: expected_files.1e.yml
