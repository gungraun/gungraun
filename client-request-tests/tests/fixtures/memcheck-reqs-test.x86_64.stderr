Handling new value --leak-check=summary for option --leak-check=summary
Searching for pointers to <__NUMBER__> not-freed blocks
Checked <__FILTER__> bytes

LEAK SUMMARY:
definitely lost: <__FILTER__> bytes in <__FILTER__> blocks
indirectly lost: <__FILTER__> bytes in <__FILTER__> blocks
possibly lost: <__FILTER__> bytes in <__FILTER__> blocks
still reachable: <__FILTER__> bytes in <__FILTER__> blocks
suppressed: <__FILTER__> bytes in <__FILTER__> blocks
Reachable blocks (those to which a pointer was found) are not shown.
To see them, rerun with: --leak-check=full --show-leak-kinds=all

First value of leaked memory: <__NUMBER__>
Searching for pointers to <__NUMBER__> not-freed blocks
Checked <__FILTER__> bytes

<__NUMBER__> bytes in <__NUMBER__> blocks are definitely lost in loss record <__NUMBER__> of <__NUMBER__>
<__BACKTRACE__>

LEAK SUMMARY:
definitely lost: <__FILTER__> bytes in <__FILTER__> blocks
indirectly lost: <__FILTER__> bytes in <__FILTER__> blocks
possibly lost: <__FILTER__> bytes in <__FILTER__> blocks
still reachable: <__FILTER__> bytes in <__FILTER__> blocks
suppressed: <__FILTER__> bytes in <__FILTER__> blocks
Reachable blocks (those to which a pointer was found) are not shown.
To see them, rerun with: --leak-check=full --show-leak-kinds=all

First value of leaked memory: <__NUMBER__>
Searching for pointers to <__NUMBER__> not-freed blocks
Checked <__FILTER__> bytes

<__NUMBER__> (<__NUMBER__>) bytes in <__NUMBER__> (<__NUMBER__>) blocks are definitely lost in new loss record <__NUMBER__> of <__NUMBER__>
<__BACKTRACE__>

LEAK SUMMARY:
definitely lost: <__FILTER__> bytes in <__FILTER__> blocks
indirectly lost: <__FILTER__> bytes in <__FILTER__> blocks
possibly lost: <__FILTER__> bytes in <__FILTER__> blocks
still reachable: <__FILTER__> bytes in <__FILTER__> blocks
suppressed: <__FILTER__> bytes in <__FILTER__> blocks
Reachable blocks (those to which a pointer was found) are not shown.
To see them, rerun with: --leak-check=full --show-leak-kinds=all


HEAP SUMMARY:
in use at exit: <__NUMBER__> bytes in <__NUMBER__> blocks
total heap usage: <__FILTER__>

Searching for pointers to <__NUMBER__> not-freed blocks
Checked <__FILTER__> bytes

LEAK SUMMARY:
definitely lost: <__FILTER__> bytes in <__FILTER__> blocks
indirectly lost: <__FILTER__> bytes in <__FILTER__> blocks
possibly lost: <__FILTER__> bytes in <__FILTER__> blocks
still reachable: <__FILTER__> bytes in <__FILTER__> blocks
suppressed: <__FILTER__> bytes in <__FILTER__> blocks
Rerun with --leak-check=full to see details of leaked memory

ERROR SUMMARY: <__NUMBER__> errors from <__NUMBER__> contexts (suppressed: <__NUMBER__> from <__NUMBER__>)
